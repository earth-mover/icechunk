name: Dependency Check

on:
  workflow_call:
    inputs:
      rust_channel:
        description: 'Rust channel to use'
        required: false
        type: string
        default: '1.89.0'
      target:
        description: 'Build target architecture (x86_64, aarch64)'
        required: false
        type: string
        default: 'x86_64'
      runner:
        description: 'GitHub runner to use'
        required: false
        type: string
        default: 'ubuntu-latest'

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  CI: 1
  RUST_BACKTRACE: short
  RUSTFLAGS: "-D warnings -W unreachable-pub -W bare-trait-objects"
  RUSTUP_MAX_RETRIES: 10
  RUST_CHANNEL: ${{ inputs.rust_channel }}
  CARGO_DENY_VERSION: '0.18.4'

jobs:
  check_dependencies:
    name: Check Dependencies
    runs-on: ${{ inputs.runner }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      # Download pre-built Rust artifacts
      - name: Download Rust artifacts
        uses: actions/download-artifact@v4
        with:
          name: rust-artifacts-${{ inputs.target }}-${{ inputs.runner }}
          path: ./

      - name: Extract Rust artifacts
        run: |
          tar -xzf rust-target-${{ inputs.target }}-${{ inputs.runner }}.tar.gz
          rm rust-target-${{ inputs.target }}-${{ inputs.runner }}.tar.gz

      - name: Install Just
        run: sudo snap install --edge --classic just

      # Cache rustup toolchain installation
      - name: Cache rustup toolchain
        uses: actions/cache@v4
        with:
          path: |
            ~/.rustup/toolchains
            ~/.rustup/update-hashes
            ~/.rustup/settings.toml
          key: rustup-${{ runner.os }}-${{ inputs.rust_channel }}
          restore-keys: |
            rustup-${{ runner.os }}-

      - name: Install Rust toolchain
        run: |
          rustup update --no-self-update ${{ inputs.rust_channel }}
          rustup component add --toolchain ${{ inputs.rust_channel }} rustfmt rust-src clippy
          rustup default ${{ inputs.rust_channel }}

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          cache-all-crates: true
          cache-on-failure: true

      - name: Cache cargo-deny
        uses: actions/cache@v4
        id: cargo_deny_cache
        with:
          path: ~/.cargo/bin/cargo-deny
          key: cargo-deny-${{ env.CARGO_DENY_VERSION }}-${{ runner.os }}

      - name: Install cargo-deny
        if: steps.cargo_deny_cache.outputs.cache-hit != 'true'
        run: cargo install --locked cargo-deny --version ${{ env.CARGO_DENY_VERSION }}

      - name: Run dependency checks
        run: just check-deps
