name: Code Quality Checks

on:
  pull_request:
    types: [opened, reopened, synchronize]
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  CI: 1
  RUST_BACKTRACE: short
  RUSTFLAGS: "-D warnings -W unreachable-pub -W bare-trait-objects"
  RUSTUP_MAX_RETRIES: 10
  RUST_CHANNEL: '1.89.0'

jobs:
  code-quality:
    name: Code Quality
    timeout-minutes: 15
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Install Just
        run: sudo snap install --edge --classic just

      - name: Install Rust toolchain
        run: |
          rustup update --no-self-update ${{ env.RUST_CHANNEL }}
          rustup component add --toolchain ${{ env.RUST_CHANNEL }} rustfmt rust-src clippy
          rustup default ${{ env.RUST_CHANNEL }}

      - name: Cache Dependencies
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ env.RUST_CHANNEL }}

      - name: Run formatting checks
        run: |
          just format --check

      - name: Run clippy linting
        run: |
          just lint --workspace

      - name: Run doc tests
        run: |
          just doctest

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Python mypy type checking
        shell: bash
        working-directory: icechunk-python
        run: |
          uvx --with mypy --with zarr --with hypothesis --with xarray --with dask mypy python

      - name: Run pre-commit checks (skip Rust)
        uses: pre-commit/action@v3.0.1
        with:
          extra_args: --all-files
        env:
          SKIP: rust-pre-commit-fast,rust-pre-commit,rust-pre-commit-ci
