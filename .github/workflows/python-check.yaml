name: Python Check

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, reopened, synchronize, labeled]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

defaults:
  run:
    working-directory: ./icechunk-python

jobs:
  build-wheels:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v6
        with:
          python-version: '3.11'

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          working-directory: icechunk-python
          args: --release --out dist --find-interpreter
          sccache: true

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: test-wheels
          path: icechunk-python/dist

  test:
    runs-on: ubuntu-latest
    needs: [build-wheels]
    steps:
      - uses: actions/checkout@v5
      - name: Stand up MinIO
        run: |
          docker compose up -d minio


      - uses: actions/setup-python@v6
        with:
          python-version: '3.11'

      - name: Download wheels
        uses: actions/download-artifact@v5
        with:
          name: test-wheels
          path: icechunk-python/dist

      - name: Restore cached hypothesis directory
        id: restore-hypothesis-cache
        uses: actions/cache/restore@v4
        with:
          path: icechunk-python/.hypothesis/
          key: cache-hypothesis-${{ runner.os }}-${{ github.run_id }}
          restore-keys: |
            cache-hypothesis-

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          working-directory: icechunk-python

      - name: Install dependencies
        shell: bash
        working-directory: icechunk-python
        run: |
          set -e
          # Create virtual environment and install the built wheel
          uv venv
          uv pip install icechunk['test'] --find-links dist

      # this is here instead of earlier to give minio more time to get up and running
      # checking and waiting only right before we need it
      - name: Wait for MinIO to be ready
        run: |
          for _ in {1..30}; do
              if curl --silent --fail http://localhost:9000/minio/health/live; then
              break
              fi
              sleep 1
          done
          docker compose exec -T minio mc alias set minio http://minio:9000 minio123 minio123

      - name: Run pytest
        shell: bash
        working-directory: icechunk-python
        run: |
          set -e
          source .venv/bin/activate
          # Run tests
          python -m pytest -n 4

      # explicitly save the cache so it gets updated, also do this even if it fails.
      - name: Save cached hypothesis directory
        id: save-hypothesis-cache
        if: always()
        uses: actions/cache/save@v4
        with:
          path: icechunk-python/.hypothesis/
          key: cache-hypothesis-${{ runner.os }}-${{ github.run_id }}

  xarray-backends:
    runs-on: ubuntu-latest
    needs: [build-wheels]
    steps:
      - uses: actions/checkout@v5
        with:
          path: "icechunk"

      - name: Stand up MinIO
        working-directory: icechunk
        run: |
          docker compose up -d minio


      - uses: actions/checkout@v5
        with:
          repository: "pydata/xarray"
          path: "xarray"
          fetch-depth: 0 # Fetch all history for all branches and tags.

      - uses: actions/setup-python@v6
        with:
          python-version: '3.13'

      - name: Download wheels
        uses: actions/download-artifact@v5
        with:
          name: test-wheels
          path: icechunk/icechunk-python/dist

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Install dependencies
        shell: bash
        working-directory: icechunk/icechunk-python
        env:
          ICECHUNK_XARRAY_BACKENDS_TESTS: 1
        run: |
          set -e
          uv venv
          uv pip install icechunk['test'] --find-links dist
          uv pip install pytest-mypy-plugins

      # this is here instead of earlier to give minio more time to get up and running
      # checking and waiting only right before we need it
      - name: Wait for MinIO to be ready
        working-directory: icechunk
        run: |
          for _ in {1..30}; do
              if curl --silent --fail http://localhost:9000/minio/health/live; then
              break
              fi
              sleep 1
          done
          docker compose exec -T minio mc alias set minio http://minio:9000 minio123 minio123
      - name: Run xarray backends tests
        shell: bash
        working-directory: icechunk/icechunk-python
        env:
          ICECHUNK_XARRAY_BACKENDS_TESTS: 1
        run: |
          set -e
          # pass xarray's pyproject.toml so that pytest can find the `flaky` fixture
          source .venv/bin/activate
          python -m pytest -c=../../xarray/pyproject.toml -W ignore --override-ini="strict_markers=false" tests/run_xarray_backends_tests.py
