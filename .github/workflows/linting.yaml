name: Linting & Code Quality

on:
  workflow_call:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  RUST_CHANNEL: '1.89.0'

jobs:
  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      # Install system dependencies
      - name: Install Just
        run: sudo snap install --edge --classic just

      - name: Install Rust toolchain
        run: |
          rustup update --no-self-update ${{ env.RUST_CHANNEL }}
          rustup component add --toolchain ${{ env.RUST_CHANNEL }} rustfmt rust-src clippy
          rustup default ${{ env.RUST_CHANNEL }}

      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.11'

      # Cache dependencies
      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ env.RUST_CHANNEL }}-lint
          cache-all-crates: true
          cache-on-failure: true

      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~/.cache/pre-commit
            ~/.cache/codespell
            ~/.cache/actionlint
            icechunk-python/.venv
          key: python-lint-${{ runner.os }}-${{ hashFiles('**/pyproject.toml', '**/.pre-commit-config.yaml', '**/.codespellrc') }}
          restore-keys: |
            python-lint-${{ runner.os }}-

      # Rust linting
      - name: Run Rust linting and formatting checks
        working-directory: ./icechunk
        run: just pre-commit-python

      # Python setup and linting
      - name: Build minimal wheel for Python linting
        uses: PyO3/maturin-action@v1
        with:
          working-directory: icechunk-python
          args: --release --out dist --find-interpreter

      - name: Setup Python linting environment
        working-directory: ./icechunk-python
        run: |
          python3 -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install icechunk['test'] --find-links dist --force-reinstall --pre
          pip install pre-commit

      - name: Run Python pre-commit linting
        working-directory: ./icechunk-python
        run: |
          source .venv/bin/activate
          SKIP=just-rust pre-commit run --all-files

      - name: Run mypy type checking
        working-directory: ./icechunk-python
        run: |
          source .venv/bin/activate
          mypy python

      # Spell checking
      - name: Annotate locations with typos
        uses: codespell-project/codespell-problem-matcher@v1.2.0

      - name: Run codespell
        uses: codespell-project/actions-codespell@v2

      # GitHub Actions linting
      - name: Run actionlint
        uses: rhysd/actionlint@v1.7.7
        with:
          fail-on-error: true
