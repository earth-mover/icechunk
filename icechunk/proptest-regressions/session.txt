# Seeds for failure cases proptest has generated in the past. It is
# automatically read and these particular cases re-run before any
# novel cases are generated.
#
# It is recommended to check this file in to source control so that
# everyone who runs the test benefits from these saved cases.
cc da94eced751096504c0803bed6ad66cde255567c3cf6c0b316cce66c22e3142a # shrinks to input = _TestAddDeleteGroupArgs { path: Path(Utf8PathBuf { _encoding: "unix", inner: "/" }), session: Session { config: RepositoryConfig { inline_chunk_threshold_bytes: 512, unsafe_overwrite_refs: false, get_partial_values_concurrency: 10, compression: CompressionConfig { algorithm: Zstd, level: 1 }, caching: CachingConfig { snapshots_cache_size: 2, manifests_cache_size: 2, transactions_cache_size: 0, attributes_cache_size: 2, chunks_cache_size: 0 }, storage: None, virtual_chunk_containers: {"tigris": VirtualChunkContainer { name: "tigris", url_prefix: "tigris", store: Tigris }, "s3": VirtualChunkContainer { name: "s3", url_prefix: "s3", store: S3(S3Options { region: None, endpoint_url: None, anonymous: false, allow_http: false }) }, "gcs": VirtualChunkContainer { name: "gcs", url_prefix: "gcs", store: Gcs({}) }, "az": VirtualChunkContainer { name: "az", url_prefix: "az", store: Azure }, "file": VirtualChunkContainer { name: "file", url_prefix: "file", store: LocalFileSystem("") }} }, storage_settings: Settings { concurrency: ConcurrencySettings { max_concurrent_requests_for_object: 5, min_concurrent_request_size: 1 } }, storage: ObjectStorage { config: ObjectStorageConfig { url: "memory:/", prefix: "", options: [] }, store: InMemory { storage: RwLock { data: Storage { next_etag: 3, map: {Path { raw: "config.yaml" }: Entry { data: b"inline_chunk_threshold_bytes: 512\nunsafe_overwrite_refs: false\nget_partial_values_concurrency: 10\ncompression:\n  algorithm: Zstd\n  level: 1\ncaching:\n  snapshots_cache_size: 2\n  manifests_cache_size: 2\n  transactions_cache_size: 0\n  attributes_cache_size: 2\n  chunks_cache_size: 0\nstorage: null\nvirtual_chunk_containers:\n  tigris:\n    name: tigris\n    url_prefix: tigris\n    store: !Tigris {}\n  s3:\n    name: s3\n    url_prefix: s3\n    store: !S3\n      region: null\n      endpoint_url: null\n      anonymous: false\n      allow_http: false\n  gcs:\n    name: gcs\n    url_prefix: gcs\n    store: !Gcs {}\n  az:\n    name: az\n    url_prefix: az\n    store: !Azure {}\n  file:\n    name: file\n    url_prefix: file\n    store: !LocalFileSystem ''\n", last_modified: 2025-01-08T15:41:22.811722357Z, attributes: Attributes({ContentType: AttributeValue("application/yaml")}), e_tag: 1 }, Path { raw: "refs/branch.main/ZZZZZZZZ.json" }: Entry { data: b"{\"snapshot\":\"WK7ZNYEGVT6AG2GB4FJ0\"}", last_modified: 2025-01-08T15:41:22.811742060Z, attributes: Attributes({}), e_tag: 2 }, Path { raw: "snapshots/WK7ZNYEGVT6AG2GB4FJ0" }: Entry { data: b"ICE\xf0\x9f\xa7\x8aCHUNKic-         \x01\x02\x01(\xb5/\xfd\0H\x1d\x03\0\xb4\x05\x9b\0\x80\x90\x90\0\0\x90\x93\xb40HK7N7DW5HTGJH7DEN20\xbe2025-01-08T15:41:22.811522140Z\xb6Repository initialized4091Z\x80\x80\x01\0T\xb6U\x14", last_modified: 2025-01-08T15:41:22.811701358Z, attributes: Attributes({Metadata("ic-spec-ver"): AttributeValue("1"), Metadata("ic-"): AttributeValue("ic-client"), Metadata("ic-file-type"): AttributeValue("manifest"), Metadata("ic-comp-alg"): AttributeValue("zstd")}), e_tag: 0 }}, uploads: {} } } } }, asset_resolver: AssetResolver { storage: ObjectStorage { config: ObjectStorageConfig { url: "memory:/", prefix: "", options: [] }, store: InMemory { storage: RwLock { data: Storage { next_etag: 3, map: {Path { raw: "config.yaml" }: Entry { data: b"inline_chunk_threshold_bytes: 512\nunsafe_overwrite_refs: false\nget_partial_values_concurrency: 10\ncompression:\n  algorithm: Zstd\n  level: 1\ncaching:\n  snapshots_cache_size: 2\n  manifests_cache_size: 2\n  transactions_cache_size: 0\n  attributes_cache_size: 2\n  chunks_cache_size: 0\nstorage: null\nvirtual_chunk_containers:\n  tigris:\n    name: tigris\n    url_prefix: tigris\n    store: !Tigris {}\n  s3:\n    name: s3\n    url_prefix: s3\n    store: !S3\n      region: null\n      endpoint_url: null\n      anonymous: false\n      allow_http: false\n  gcs:\n    name: gcs\n    url_prefix: gcs\n    store: !Gcs {}\n  az:\n    name: az\n    url_prefix: az\n    store: !Azure {}\n  file:\n    name: file\n    url_prefix: file\n    store: !LocalFileSystem ''\n", last_modified: 2025-01-08T15:41:22.811722357Z, attributes: Attributes({ContentType: AttributeValue("application/yaml")}), e_tag: 1 }, Path { raw: "refs/branch.main/ZZZZZZZZ.json" }: Entry { data: b"{\"snapshot\":\"WK7ZNYEGVT6AG2GB4FJ0\"}", last_modified: 2025-01-08T15:41:22.811742060Z, attributes: Attributes({}), e_tag: 2 }, Path { raw: "snapshots/WK7ZNYEGVT6AG2GB4FJ0" }: Entry { data: b"ICE\xf0\x9f\xa7\x8aCHUNKic-         \x01\x02\x01(\xb5/\xfd\0H\x1d\x03\0\xb4\x05\x9b\0\x80\x90\x90\0\0\x90\x93\xb40HK7N7DW5HTGJH7DEN20\xbe2025-01-08T15:41:22.811522140Z\xb6Repository initialized4091Z\x80\x80\x01\0T\xb6U\x14", last_modified: 2025-01-08T15:41:22.811701358Z, attributes: Attributes({Metadata("ic-spec-ver"): AttributeValue("1"), Metadata("ic-"): AttributeValue("ic-client"), Metadata("ic-file-type"): AttributeValue("manifest"), Metadata("ic-comp-alg"): AttributeValue("zstd")}), e_tag: 0 }}, uploads: {} } } } }, storage_settings: Settings { concurrency: ConcurrencySettings { max_concurrent_requests_for_object: 5, min_concurrent_request_size: 1 } }, num_snapshots: 2, num_manifests: 2, num_transactions: 0, num_attributes: 2, num_chunks: 0, snapshot_cache: Cache { .. }, manifest_cache: Cache { .. }, transactions_cache: Cache { .. }, attributes_cache: Cache { .. }, chunk_cache: Cache { .. } }, virtual_resolver: VirtualChunkResolver { containers: [VirtualChunkContainer { name: "tigris", url_prefix: "tigris", store: Tigris }, VirtualChunkContainer { name: "file", url_prefix: "file", store: LocalFileSystem("") }, VirtualChunkContainer { name: "gcs", url_prefix: "gcs", store: Gcs({}) }, VirtualChunkContainer { name: "s3", url_prefix: "s3", store: S3(S3Options { region: None, endpoint_url: None, anonymous: false, allow_http: false }) }, VirtualChunkContainer { name: "az", url_prefix: "az", store: Azure }], credentials: {}, fetchers: RwLock { data: {} } }, branch_name: Some("main"), snapshot_id: e4cffaf9d0de8ca80a0b23e4, change_set: ChangeSet { new_groups: {}, new_arrays: {}, updated_arrays: {}, updated_attributes: {}, set_chunks: {}, deleted_groups: {}, deleted_arrays: {} } } }
cc b0a66d6fdd012c51dd804b9f6c58e4403b2dd41f15c3856adc8d90e3d42311fc # shrinks to (initial_state, transitions, seen_counter) = (RepositoryModel { arrays: {}, groups: [] }, [AddArray(Path(Utf8PathBuf { _encoding: "unix", inner: "/" }), ZarrArrayMetadata { shape: [1], data_type: Bool, chunk_shape: ChunkShape([1]), chunk_key_encoding: Slash, fill_value: Bool(false), codecs: [Codec { name: "mycodec", configuration: None }], storage_transformers: Some([StorageTransformer { name: "mytransformer", configuration: None }]), dimension_names: None })], None)
cc 4f7049d25e420db7b98fcadb0fe6bc7576d3bbc6eb3b971074e6f7257282d040 # shrinks to input = _TestAddDeleteArrayArgs { path: Path(Utf8PathBuf { _encoding: "unix", inner: "/" }), metadata: ZarrArrayMetadata { shape: [1], data_type: Bool, chunk_shape: ChunkShape([1]), chunk_key_encoding: Slash, fill_value: Bool(false), codecs: [Codec { name: "mycodec", configuration: None }], storage_transformers: Some([StorageTransformer { name: "mytransformer", configuration: None }]), dimension_names: None }, session: Session { config: RepositoryConfig { inline_chunk_threshold_bytes: 512, unsafe_overwrite_refs: false, get_partial_values_concurrency: 10, compression: CompressionConfig { algorithm: Zstd, level: 1 }, caching: CachingConfig { snapshots_cache_size: 2, manifests_cache_size: 2, transactions_cache_size: 0, attributes_cache_size: 2, chunks_cache_size: 0 }, storage: None, virtual_chunk_containers: {"file": VirtualChunkContainer { name: "file", url_prefix: "file", store: LocalFileSystem("") }, "tigris": VirtualChunkContainer { name: "tigris", url_prefix: "tigris", store: Tigris }, "s3": VirtualChunkContainer { name: "s3", url_prefix: "s3", store: S3(S3Options { region: None, endpoint_url: None, anonymous: false, allow_http: false }) }, "gcs": VirtualChunkContainer { name: "gcs", url_prefix: "gcs", store: Gcs({}) }, "az": VirtualChunkContainer { name: "az", url_prefix: "az", store: Azure }} }, storage_settings: Settings { concurrency: ConcurrencySettings { max_concurrent_requests_for_object: 5, min_concurrent_request_size: 1 } }, storage: ObjectStorage { config: ObjectStorageConfig { url: "memory:/", prefix: "", options: [] }, store: InMemory { storage: RwLock { data: Storage { next_etag: 3, map: {Path { raw: "config.yaml" }: Entry { data: b"inline_chunk_threshold_bytes: 512\nunsafe_overwrite_refs: false\nget_partial_values_concurrency: 10\ncompression:\n  algorithm: Zstd\n  level: 1\ncaching:\n  snapshots_cache_size: 2\n  manifests_cache_size: 2\n  transactions_cache_size: 0\n  attributes_cache_size: 2\n  chunks_cache_size: 0\nstorage: null\nvirtual_chunk_containers:\n  file:\n    name: file\n    url_prefix: file\n    store: !LocalFileSystem ''\n  tigris:\n    name: tigris\n    url_prefix: tigris\n    store: !Tigris {}\n  s3:\n    name: s3\n    url_prefix: s3\n    store: !S3\n      region: null\n      endpoint_url: null\n      anonymous: false\n      allow_http: false\n  gcs:\n    name: gcs\n    url_prefix: gcs\n    store: !Gcs {}\n  az:\n    name: az\n    url_prefix: az\n    store: !Azure {}\n", last_modified: 2025-01-08T15:41:23.520617823Z, attributes: Attributes({ContentType: AttributeValue("application/yaml")}), e_tag: 2 }, Path { raw: "refs/branch.main/ZZZZZZZZ.json" }: Entry { data: b"{\"snapshot\":\"6EPXF9PX9JPEY8F4Q9KG\"}", last_modified: 2025-01-08T15:41:23.520470841Z, attributes: Attributes({}), e_tag: 1 }, Path { raw: "snapshots/6EPXF9PX9JPEY8F4Q9KG" }: Entry { data: b"ICE\xf0\x9f\xa7\x8aCHUNKic-         \x01\x02\x01(\xb5/\xfd\0H\x1d\x03\0\xb4\x05\x9b\0\x80\x90\x90\0\0\x90\x93\xb4QJ6QBBJ59Y0VSRKHH1GG\xbe2025-01-08T15:41:23.520187204Z\xb6Repository initialized9404Z\x80\x80\x01\0T\xb6U\x14", last_modified: 2025-01-08T15:41:23.520418067Z, attributes: Attributes({Metadata("ic-file-type"): AttributeValue("manifest"), Metadata("ic-spec-ver"): AttributeValue("1"), Metadata("ic-comp-alg"): AttributeValue("zstd"), Metadata("ic-"): AttributeValue("ic-client")}), e_tag: 0 }}, uploads: {} } } } }, asset_resolver: AssetResolver { storage: ObjectStorage { config: ObjectStorageConfig { url: "memory:/", prefix: "", options: [] }, store: InMemory { storage: RwLock { data: Storage { next_etag: 3, map: {Path { raw: "config.yaml" }: Entry { data: b"inline_chunk_threshold_bytes: 512\nunsafe_overwrite_refs: false\nget_partial_values_concurrency: 10\ncompression:\n  algorithm: Zstd\n  level: 1\ncaching:\n  snapshots_cache_size: 2\n  manifests_cache_size: 2\n  transactions_cache_size: 0\n  attributes_cache_size: 2\n  chunks_cache_size: 0\nstorage: null\nvirtual_chunk_containers:\n  file:\n    name: file\n    url_prefix: file\n    store: !LocalFileSystem ''\n  tigris:\n    name: tigris\n    url_prefix: tigris\n    store: !Tigris {}\n  s3:\n    name: s3\n    url_prefix: s3\n    store: !S3\n      region: null\n      endpoint_url: null\n      anonymous: false\n      allow_http: false\n  gcs:\n    name: gcs\n    url_prefix: gcs\n    store: !Gcs {}\n  az:\n    name: az\n    url_prefix: az\n    store: !Azure {}\n", last_modified: 2025-01-08T15:41:23.520617823Z, attributes: Attributes({ContentType: AttributeValue("application/yaml")}), e_tag: 2 }, Path { raw: "refs/branch.main/ZZZZZZZZ.json" }: Entry { data: b"{\"snapshot\":\"6EPXF9PX9JPEY8F4Q9KG\"}", last_modified: 2025-01-08T15:41:23.520470841Z, attributes: Attributes({}), e_tag: 1 }, Path { raw: "snapshots/6EPXF9PX9JPEY8F4Q9KG" }: Entry { data: b"ICE\xf0\x9f\xa7\x8aCHUNKic-         \x01\x02\x01(\xb5/\xfd\0H\x1d\x03\0\xb4\x05\x9b\0\x80\x90\x90\0\0\x90\x93\xb4QJ6QBBJ59Y0VSRKHH1GG\xbe2025-01-08T15:41:23.520187204Z\xb6Repository initialized9404Z\x80\x80\x01\0T\xb6U\x14", last_modified: 2025-01-08T15:41:23.520418067Z, attributes: Attributes({Metadata("ic-file-type"): AttributeValue("manifest"), Metadata("ic-spec-ver"): AttributeValue("1"), Metadata("ic-comp-alg"): AttributeValue("zstd"), Metadata("ic-"): AttributeValue("ic-client")}), e_tag: 0 }}, uploads: {} } } } }, storage_settings: Settings { concurrency: ConcurrencySettings { max_concurrent_requests_for_object: 5, min_concurrent_request_size: 1 } }, num_snapshots: 2, num_manifests: 2, num_transactions: 0, num_attributes: 2, num_chunks: 0, snapshot_cache: Cache { .. }, manifest_cache: Cache { .. }, transactions_cache: Cache { .. }, attributes_cache: Cache { .. }, chunk_cache: Cache { .. } }, virtual_resolver: VirtualChunkResolver { containers: [VirtualChunkContainer { name: "tigris", url_prefix: "tigris", store: Tigris }, VirtualChunkContainer { name: "file", url_prefix: "file", store: LocalFileSystem("") }, VirtualChunkContainer { name: "gcs", url_prefix: "gcs", store: Gcs({}) }, VirtualChunkContainer { name: "s3", url_prefix: "s3", store: S3(S3Options { region: None, endpoint_url: None, anonymous: false, allow_http: false }) }, VirtualChunkContainer { name: "az", url_prefix: "az", store: Azure }], credentials: {}, fetchers: RwLock { data: {} } }, branch_name: Some("main"), snapshot_id: 33add7a6dd4cacef21e4ba67, change_set: ChangeSet { new_groups: {}, new_arrays: {}, updated_arrays: {}, updated_attributes: {}, set_chunks: {}, deleted_groups: {}, deleted_arrays: {} } } }
cc a4bf17e17086f3e723abccc1307f0b489a5e646e899c08e3b483d3befe15cb26 # shrinks to input = _TestAddArrayGroupClashArgs { path: Path(Utf8PathBuf { _encoding: "unix", inner: "/" }), metadata: ZarrArrayMetadata { shape: [1], data_type: Bool, chunk_shape: ChunkShape([1]), chunk_key_encoding: Slash, fill_value: Bool(false), codecs: [Codec { name: "mycodec", configuration: None }], storage_transformers: Some([StorageTransformer { name: "mytransformer", configuration: None }]), dimension_names: None }, session: Session { config: RepositoryConfig { inline_chunk_threshold_bytes: 512, unsafe_overwrite_refs: false, get_partial_values_concurrency: 10, compression: CompressionConfig { algorithm: Zstd, level: 1 }, caching: CachingConfig { snapshots_cache_size: 2, manifests_cache_size: 2, transactions_cache_size: 0, attributes_cache_size: 2, chunks_cache_size: 0 }, storage: None, virtual_chunk_containers: {"tigris": VirtualChunkContainer { name: "tigris", url_prefix: "tigris", store: Tigris }, "file": VirtualChunkContainer { name: "file", url_prefix: "file", store: LocalFileSystem("") }, "az": VirtualChunkContainer { name: "az", url_prefix: "az", store: Azure }, "s3": VirtualChunkContainer { name: "s3", url_prefix: "s3", store: S3(S3Options { region: None, endpoint_url: None, anonymous: false, allow_http: false }) }, "gcs": VirtualChunkContainer { name: "gcs", url_prefix: "gcs", store: Gcs({}) }} }, storage_settings: Settings { concurrency: ConcurrencySettings { max_concurrent_requests_for_object: 5, min_concurrent_request_size: 1 } }, storage: ObjectStorage { config: ObjectStorageConfig { url: "memory:/", prefix: "", options: [] }, store: InMemory { storage: RwLock { data: Storage { next_etag: 3, map: {Path { raw: "config.yaml" }: Entry { data: b"inline_chunk_threshold_bytes: 512\nunsafe_overwrite_refs: false\nget_partial_values_concurrency: 10\ncompression:\n  algorithm: Zstd\n  level: 1\ncaching:\n  snapshots_cache_size: 2\n  manifests_cache_size: 2\n  transactions_cache_size: 0\n  attributes_cache_size: 2\n  chunks_cache_size: 0\nstorage: null\nvirtual_chunk_containers:\n  tigris:\n    name: tigris\n    url_prefix: tigris\n    store: !Tigris {}\n  file:\n    name: file\n    url_prefix: file\n    store: !LocalFileSystem ''\n  az:\n    name: az\n    url_prefix: az\n    store: !Azure {}\n  s3:\n    name: s3\n    url_prefix: s3\n    store: !S3\n      region: null\n      endpoint_url: null\n      anonymous: false\n      allow_http: false\n  gcs:\n    name: gcs\n    url_prefix: gcs\n    store: !Gcs {}\n", last_modified: 2025-01-08T15:41:23.635133963Z, attributes: Attributes({ContentType: AttributeValue("application/yaml")}), e_tag: 2 }, Path { raw: "refs/branch.main/ZZZZZZZZ.json" }: Entry { data: b"{\"snapshot\":\"2T8MSGGT2FVZBS6094K0\"}", last_modified: 2025-01-08T15:41:23.635089347Z, attributes: Attributes({}), e_tag: 1 }, Path { raw: "snapshots/2T8MSGGT2FVZBS6094K0" }: Entry { data: b"ICE\xf0\x9f\xa7\x8aCHUNKic-         \x01\x02\x01(\xb5/\xfd\0H\x1d\x03\0\xb4\x05\x9b\0\x80\x90\x90\0\0\x90\x93\xb47BZ1BYSVSA8MSS4WB5JG\xbe2025-01-08T15:41:23.634873394Z\xb6Repository initialized5576Z\x80\x80\x01\0T\xb6U\x14", last_modified: 2025-01-08T15:41:23.635043198Z, attributes: Attributes({Metadata("ic-comp-alg"): AttributeValue("zstd"), Metadata("ic-file-type"): AttributeValue("manifest"), Metadata("ic-spec-ver"): AttributeValue("1"), Metadata("ic-"): AttributeValue("ic-client")}), e_tag: 0 }}, uploads: {} } } } }, asset_resolver: AssetResolver { storage: ObjectStorage { config: ObjectStorageConfig { url: "memory:/", prefix: "", options: [] }, store: InMemory { storage: RwLock { data: Storage { next_etag: 3, map: {Path { raw: "config.yaml" }: Entry { data: b"inline_chunk_threshold_bytes: 512\nunsafe_overwrite_refs: false\nget_partial_values_concurrency: 10\ncompression:\n  algorithm: Zstd\n  level: 1\ncaching:\n  snapshots_cache_size: 2\n  manifests_cache_size: 2\n  transactions_cache_size: 0\n  attributes_cache_size: 2\n  chunks_cache_size: 0\nstorage: null\nvirtual_chunk_containers:\n  tigris:\n    name: tigris\n    url_prefix: tigris\n    store: !Tigris {}\n  file:\n    name: file\n    url_prefix: file\n    store: !LocalFileSystem ''\n  az:\n    name: az\n    url_prefix: az\n    store: !Azure {}\n  s3:\n    name: s3\n    url_prefix: s3\n    store: !S3\n      region: null\n      endpoint_url: null\n      anonymous: false\n      allow_http: false\n  gcs:\n    name: gcs\n    url_prefix: gcs\n    store: !Gcs {}\n", last_modified: 2025-01-08T15:41:23.635133963Z, attributes: Attributes({ContentType: AttributeValue("application/yaml")}), e_tag: 2 }, Path { raw: "refs/branch.main/ZZZZZZZZ.json" }: Entry { data: b"{\"snapshot\":\"2T8MSGGT2FVZBS6094K0\"}", last_modified: 2025-01-08T15:41:23.635089347Z, attributes: Attributes({}), e_tag: 1 }, Path { raw: "snapshots/2T8MSGGT2FVZBS6094K0" }: Entry { data: b"ICE\xf0\x9f\xa7\x8aCHUNKic-         \x01\x02\x01(\xb5/\xfd\0H\x1d\x03\0\xb4\x05\x9b\0\x80\x90\x90\0\0\x90\x93\xb47BZ1BYSVSA8MSS4WB5JG\xbe2025-01-08T15:41:23.634873394Z\xb6Repository initialized5576Z\x80\x80\x01\0T\xb6U\x14", last_modified: 2025-01-08T15:41:23.635043198Z, attributes: Attributes({Metadata("ic-comp-alg"): AttributeValue("zstd"), Metadata("ic-file-type"): AttributeValue("manifest"), Metadata("ic-spec-ver"): AttributeValue("1"), Metadata("ic-"): AttributeValue("ic-client")}), e_tag: 0 }}, uploads: {} } } } }, storage_settings: Settings { concurrency: ConcurrencySettings { max_concurrent_requests_for_object: 5, min_concurrent_request_size: 1 } }, num_snapshots: 2, num_manifests: 2, num_transactions: 0, num_attributes: 2, num_chunks: 0, snapshot_cache: Cache { .. }, manifest_cache: Cache { .. }, transactions_cache: Cache { .. }, attributes_cache: Cache { .. }, chunk_cache: Cache { .. } }, virtual_resolver: VirtualChunkResolver { containers: [VirtualChunkContainer { name: "tigris", url_prefix: "tigris", store: Tigris }, VirtualChunkContainer { name: "file", url_prefix: "file", store: LocalFileSystem("") }, VirtualChunkContainer { name: "gcs", url_prefix: "gcs", store: Gcs({}) }, VirtualChunkContainer { name: "az", url_prefix: "az", store: Azure }, VirtualChunkContainer { name: "s3", url_prefix: "s3", store: S3(S3Options { region: None, endpoint_url: None, anonymous: false, allow_http: false }) }], credentials: {}, fetchers: RwLock { data: {} } }, branch_name: Some("main"), snapshot_id: 16914cc21a13f7f5e4c04926, change_set: ChangeSet { new_groups: {}, new_arrays: {}, updated_arrays: {}, updated_attributes: {}, set_chunks: {}, deleted_groups: {}, deleted_arrays: {} } } }
